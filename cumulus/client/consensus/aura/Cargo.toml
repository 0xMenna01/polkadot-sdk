[package]
name = "cumulus-client-consensus-aura"
description = "AURA consensus algorithm for parachains"
version = "0.1.0"
authors.workspace = true
edition.workspace = true

[dependencies]
async-trait = "0.1.73"
codec = { package = "parity-scale-codec", version = "3.0.0", features = [ "derive" ] }
futures = "0.3.28"
tracing = "0.1.37"
schnellru = "0.2.1"

# Substrate
sc-client-api = { path = "../../../../substrate/client/api" }
sc-consensus = { path = "../../../../substrate/client/consensus/common" }
sc-consensus-aura = { path = "../../../../substrate/client/consensus/aura" }
sc-consensus-babe = { path = "../../../../substrate/client/consensus/babe" }
sc-consensus-slots = { path = "../../../../substrate/client/consensus/slots" }
sc-telemetry = { path = "../../../../substrate/client/telemetry" }
sp-api = { path = "../../../../substrate/primitives/api" }
sp-application-crypto = { path = "../../../../substrate/primitives/application-crypto" }
sp-block-builder = { path = "../../../../substrate/primitives/block-builder" }
sp-blockchain = { path = "../../../../substrate/primitives/blockchain" }
sp-consensus = { path = "../../../../substrate/primitives/consensus/common" }
sp-consensus-aura = { path = "../../../../substrate/primitives/consensus/aura" }
sp-core = { path = "../../../../substrate/primitives/core" }
sp-inherents = { path = "../../../../substrate/primitives/inherents" }
sp-keystore = { path = "../../../../substrate/primitives/keystore" }
sp-runtime = { path = "../../../../substrate/primitives/runtime" }
sp-timestamp = { path = "../../../../substrate/primitives/timestamp" }
sp-state-machine = { path = "../../../../substrate/primitives/state-machine" }
substrate-prometheus-endpoint = { path = "../../../../substrate/utils/prometheus" }

# Cumulus
cumulus-client-consensus-common = { path = "../common" }
cumulus-relay-chain-interface = { path = "../../relay-chain-interface" }
cumulus-client-consensus-proposer = { path = "../proposer" }
cumulus-primitives-aura = { path = "../../../primitives/aura" }
cumulus-primitives-core = { path = "../../../primitives/core" }
cumulus-primitives-parachain-inherent = { path = "../../../primitives/parachain-inherent" }
cumulus-client-collator = { path = "../../collator" }

# Polkadot
polkadot-primitives = { path = "../../../../polkadot/primitives" }
polkadot-node-primitives = { path = "../../../../polkadot/node/primitives" }
polkadot-node-subsystem = { path = "../../../../polkadot/node/subsystem" }
polkadot-overseer = { path = "../../../../polkadot/node/overseer" }

[features]
runtime-benchmarks = [
	"cumulus-client-collator/runtime-benchmarks",
	"cumulus-client-consensus-common/runtime-benchmarks",
	"cumulus-client-consensus-proposer/runtime-benchmarks",
	"cumulus-primitives-aura/runtime-benchmarks",
	"cumulus-primitives-core/runtime-benchmarks",
	"cumulus-primitives-parachain-inherent/runtime-benchmarks",
	"cumulus-relay-chain-interface/runtime-benchmarks",
	"polkadot-node-primitives/runtime-benchmarks",
	"polkadot-node-subsystem/runtime-benchmarks",
	"polkadot-overseer/runtime-benchmarks",
	"polkadot-primitives/runtime-benchmarks",
	"sc-client-api/runtime-benchmarks",
	"sc-consensus-aura/runtime-benchmarks",
	"sc-consensus-babe/runtime-benchmarks",
	"sc-consensus-slots/runtime-benchmarks",
	"sc-consensus/runtime-benchmarks",
	"sc-telemetry/runtime-benchmarks",
	"sp-api/runtime-benchmarks",
	"sp-application-crypto/runtime-benchmarks",
	"sp-block-builder/runtime-benchmarks",
	"sp-blockchain/runtime-benchmarks",
	"sp-consensus-aura/runtime-benchmarks",
	"sp-consensus/runtime-benchmarks",
	"sp-core/runtime-benchmarks",
	"sp-inherents/runtime-benchmarks",
	"sp-keystore/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"sp-state-machine/runtime-benchmarks",
	"sp-timestamp/runtime-benchmarks",
]
